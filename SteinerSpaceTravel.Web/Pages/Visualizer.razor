@page "/"
@using SteinerSpaceTravel.Web.Services
@using SkiaSharp.Views.Blazor
@using Cysharp.Web
@inject VisualizeService VisualizeService
@inject IJSRuntime Js

<PageTitle>Visualizer</PageTitle>

<h1>Visualizer</h1>

<div class="seed-section">
    <div class="input-label">Seed</div>
    <input type="number" min="@ulong.MinValue" max="@ulong.MaxValue" @bind-value="@VisualizeService.Seed" />
</div>

<div class="testcase-section">
    <div>
        <div class="input-label">Input</div>
        <textarea rows="4" cols="30" @bind="@VisualizeService.Input"></textarea>
    </div>
    <div>
        <div class="input-label">Output</div>
        <textarea rows="4" cols="30" @bind="@VisualizeService.Output"></textarea>
    </div>
</div>

<button class="btn btn-primary" disabled="@(VisualizeService.Score == 0)" @onclick="@Tweet">Tweet</button>

<hr />

<p>
    Score = @VisualizeService.Score <span class="validation-message">@VisualizeService.ErrorMessage</span>
</p>

<SKCanvasView class="visualizer" width="600" height="600" @ref="_canvasView" OnPaintSurface="PaintSurface">ビジュアライザ非対応のブラウザです。</SKCanvasView>

@code {
    private SKCanvasView? _canvasView;

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        _canvasView?.Invalidate();
        return base.OnAfterRenderAsync(firstRender);
    }

    private void PaintSurface(SKPaintSurfaceEventArgs e) => VisualizeService.Visualize(e.Surface.Canvas, e.Info);

    private async Task Tweet()
    {
        // https://developer.twitter.com/en/docs/twitter-for-websites/tweet-button/guides/web-intent
        const string webIntentUrl = "https://twitter.com/intent/tweet";
        const string url = "https://google.com/";
        const string hashtags = "test,visualizer";
        var text = $"XXXXXのseed={VisualizeService.Seed}で{VisualizeService.Score:#,##0}点を獲得しました！（ここに画像を貼ってね）";
        var tweetUrl = WebSerializer.ToQueryString(webIntentUrl, new { text, url, hashtags });        
        await Js.InvokeVoidAsync("open", tweetUrl, "_blank", "noopener");
    }
}